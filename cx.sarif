{"$schema":"https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json","version":"2.1.0","runs":[{"tool":{"driver":{"name":"Checkmarx - SAST","organization":"Checkmarx - SAST","semanticVersion":"1.0.0","rules":[{"id":"Reflected_XSS_All_Clients","name":"Reflected_XSS_All_Clients","shortDescription":{"text":"Reflected_XSS_All_Clients"},"fullDescription":{"text":"Reflected_XSS_All_Clients"},"help":{"text":"http://cxdemo-allin1v9.cxlab.lab/CxWebClient/ScanQueryDescription.aspx?queryID=427&queryVersionCode=54407668&queryTitle=Reflected_XSS_All_Clients","markdown":"[Reflected_XSS_All_Clients Details](http://cxdemo-allin1v9.cxlab.lab/CxWebClient/ScanQueryDescription.aspx?queryID=427&queryVersionCode=54407668&queryTitle=Reflected_XSS_All_Clients)"},"properties":{"tags":["security","external/cwe/cwe-79"],"precision":"","security-severity":"9.0"}},{"id":"SQL_Injection","name":"SQL_Injection","shortDescription":{"text":"SQL_Injection"},"fullDescription":{"text":"SQL_Injection"},"help":{"text":"http://cxdemo-allin1v9.cxlab.lab/CxWebClient/ScanQueryDescription.aspx?queryID=430&queryVersionCode=54428530&queryTitle=SQL_Injection","markdown":"[SQL_Injection Details](http://cxdemo-allin1v9.cxlab.lab/CxWebClient/ScanQueryDescription.aspx?queryID=430&queryVersionCode=54428530&queryTitle=SQL_Injection)"},"properties":{"tags":["security","external/cwe/cwe-89"],"precision":""}},{"id":"Second_Order_SQL_Injection","name":"Second_Order_SQL_Injection","shortDescription":{"text":"Second_Order_SQL_Injection"},"fullDescription":{"text":"Second_Order_SQL_Injection"},"help":{"text":"http://cxdemo-allin1v9.cxlab.lab/CxWebClient/ScanQueryDescription.aspx?queryID=429&queryVersionCode=54438965&queryTitle=Second_Order_SQL_Injection","markdown":"[Second_Order_SQL_Injection Details](http://cxdemo-allin1v9.cxlab.lab/CxWebClient/ScanQueryDescription.aspx?queryID=429&queryVersionCode=54438965&queryTitle=Second_Order_SQL_Injection)"},"properties":{"tags":["security","external/cwe/cwe-89"],"precision":""}},{"id":"Stored_XSS","name":"Stored_XSS","shortDescription":{"text":"Stored_XSS"},"fullDescription":{"text":"Stored_XSS"},"help":{"text":"http://cxdemo-allin1v9.cxlab.lab/CxWebClient/ScanQueryDescription.aspx?queryID=431&queryVersionCode=54459834&queryTitle=Stored_XSS","markdown":"[Stored_XSS Details](http://cxdemo-allin1v9.cxlab.lab/CxWebClient/ScanQueryDescription.aspx?queryID=431&queryVersionCode=54459834&queryTitle=Stored_XSS)"},"properties":{"tags":["security","external/cwe/cwe-79"],"precision":""}},{"id":"XPath_Injection","name":"XPath_Injection","shortDescription":{"text":"XPath_Injection"},"fullDescription":{"text":"XPath_Injection"},"help":{"text":"http://cxdemo-allin1v9.cxlab.lab/CxWebClient/ScanQueryDescription.aspx?queryID=433&queryVersionCode=54470269&queryTitle=XPath_Injection","markdown":"[XPath_Injection Details](http://cxdemo-allin1v9.cxlab.lab/CxWebClient/ScanQueryDescription.aspx?queryID=433&queryVersionCode=54470269&queryTitle=XPath_Injection)"},"properties":{"tags":["security","external/cwe/cwe-643"],"precision":""}}]}},"results":[{"ruleId":"Reflected_XSS_All_Clients","level":"error","message":{"text":"The application's MakeRow embeds untrusted data in the generated output with Text, at line 82 of WebGoat\\Content\\EncryptVSEncode.aspx.cs. This untrusted data is embedded straight into the output without proper sanitization or encoding, enabling an attacker to inject malicious code into the output.\nThe attacker would be able to alter the returned web page by simply providing modified data in the user input Text, which is read by the btnGO_Click method at line 39 of WebGoat\\Content\\EncryptVSEncode.aspx.cs. This input then flows through the code straight to the output web page, without sanitization.&nbsp;\nThis can enable a Reflected Cross-Site Scripting (XSS) attack.\n"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/Content/EncryptVSEncode.aspx.cs"},"region":{"startLine":38,"endLine":38}}},{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/Content/EncryptVSEncode.aspx.cs"},"region":{"startLine":39,"endLine":39}}}]},{"ruleId":"Reflected_XSS_All_Clients","level":"error","message":{"text":"The application's LoadComments embeds untrusted data in the generated output with Text, at line 83 of WebGoat\\WebGoatCoins\\ProductDetails.aspx.cs. This untrusted data is embedded straight into the output without proper sanitization or encoding, enabling an attacker to inject malicious code into the output.\nThe attacker would be able to alter the returned web page by simply providing modified data in the user input commentRow, which is read by the LoadComments method at line 77 of WebGoat\\WebGoatCoins\\ProductDetails.aspx.cs. This input then flows through the code straight to the output web page, without sanitization.&nbsp;\nThis can enable a Reflected Cross-Site Scripting (XSS) attack.\n"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/WebGoatCoins/ProductDetails.aspx.cs"},"region":{"startLine":64,"endLine":64}}},{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/WebGoatCoins/ProductDetails.aspx.cs"},"region":{"startLine":65,"endLine":65}}},{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/WebGoatCoins/ProductDetails.aspx.cs"},"region":{"startLine":68,"endLine":68}}},{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/WebGoatCoins/ProductDetails.aspx.cs"},"region":{"startLine":76,"endLine":76}}},{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/WebGoatCoins/ProductDetails.aspx.cs"},"region":{"startLine":77,"endLine":77}}},{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/WebGoatCoins/ProductDetails.aspx.cs"},"region":{"startLine":63,"endLine":63}}}]},{"ruleId":"Reflected_XSS_All_Clients","level":"error","message":{"text":"The application's Page_Load embeds untrusted data in the generated output with Text, at line 27 of WebGoat\\WebGoatCoins\\Catalog.aspx.cs. This untrusted data is embedded straight into the output without proper sanitization or encoding, enabling an attacker to inject malicious code into the output.\nThe attacker would be able to alter the returned web page by simply providing modified data in the user input prodRow, which is read by the Page_Load method at line 27 of WebGoat\\WebGoatCoins\\Catalog.aspx.cs. This input then flows through the code straight to the output web page, without sanitization.&nbsp;\nThis can enable a Reflected Cross-Site Scripting (XSS) attack.\n"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/WebGoatCoins/Catalog.aspx.cs"},"region":{"startLine":23,"endLine":23}}},{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/WebGoatCoins/Catalog.aspx.cs"},"region":{"startLine":27,"endLine":27}}},{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/WebGoatCoins/Catalog.aspx.cs"},"region":{"startLine":28,"endLine":28}}},{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/WebGoatCoins/Catalog.aspx.cs"},"region":{"startLine":29,"endLine":29}}}]},{"ruleId":"Reflected_XSS_All_Clients","level":"error","message":{"text":"The application's ButtonCheckEmail_Click embeds untrusted data in the generated output with Text, at line 38 of WebGoat\\WebGoatCoins\\ForgotPassword.aspx.cs. This untrusted data is embedded straight into the output without proper sanitization or encoding, enabling an attacker to inject malicious code into the output.\nThe attacker would be able to alter the returned web page by simply providing modified data in the user input row, which is read by the GetSecurityQuestionAndAnswer method at line 333 of WebGoat\\App_Code\\DB\\SqliteDbProvider.cs. This input then flows through the code straight to the output web page, without sanitization.&nbsp;\nThis can enable a Reflected Cross-Site Scripting (XSS) attack.\n"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/App_Code/DB/SqliteDbProvider.cs"},"region":{"startLine":333,"endLine":333}}}]},{"ruleId":"Reflected_XSS_All_Clients","level":"error","message":{"text":"The application's %&gt; embeds untrusted data in the generated output with Write, at line 19 of WebGoat\\WebGoatCoins\\ProductDetails.aspx. This untrusted data is embedded straight into the output without proper sanitization or encoding, enabling an attacker to inject malicious code into the output.\nThe attacker would be able to alter the returned web page by simply providing modified data in the user input Request, which is read by the %&gt; method at line 19 of WebGoat\\WebGoatCoins\\ProductDetails.aspx. This input then flows through the code straight to the output web page, without sanitization.&nbsp;\nThis can enable a Reflected Cross-Site Scripting (XSS) attack.\n"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/WebGoatCoins/ProductDetails.aspx"},"region":{"startLine":19,"endLine":19}}}]},{"ruleId":"Reflected_XSS_All_Clients","level":"error","message":{"text":"The application's Page_Load embeds untrusted data in the generated output with Response, at line 27 of WebGoat\\Content\\HeaderInjection.aspx.cs. This untrusted data is embedded straight into the output without proper sanitization or encoding, enabling an attacker to inject malicious code into the output.\nThe attacker would be able to alter the returned web page by simply providing modified data in the user input QueryString_Header, which is read by the Page_Load method at line 26 of WebGoat\\Content\\HeaderInjection.aspx.cs. This input then flows through the code straight to the output web page, without sanitization.&nbsp;\nThis can enable a Reflected Cross-Site Scripting (XSS) attack.\n"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/Content/HeaderInjection.aspx.cs"},"region":{"startLine":33,"endLine":33}}},{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/Content/HeaderInjection.aspx.cs"},"region":{"startLine":19,"endLine":19}}},{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/Content/HeaderInjection.aspx.cs"},"region":{"startLine":26,"endLine":26}}}]},{"ruleId":"Reflected_XSS_All_Clients","level":"error","message":{"text":"The application's ButtonCheckEmail_Click embeds untrusted data in the generated output with Text, at line 37 of WebGoat\\Content\\ForgotPassword.aspx.cs. This untrusted data is embedded straight into the output without proper sanitization or encoding, enabling an attacker to inject malicious code into the output.\nThe attacker would be able to alter the returned web page by simply providing modified data in the user input row, which is read by the GetSecurityQuestionAndAnswer method at line 337 of WebGoat\\App_Code\\DB\\MySqlDbProvider.cs. This input then flows through the code straight to the output web page, without sanitization.&nbsp;\nThis can enable a Reflected Cross-Site Scripting (XSS) attack.\n"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/App_Code/DB/MySqlDbProvider.cs"},"region":{"startLine":337,"endLine":337}}}]},{"ruleId":"Reflected_XSS_All_Clients","level":"error","message":{"text":"The application's ResponseFile embeds untrusted data in the generated output with BinaryWrite, at line 88 of WebGoat\\Content\\PathManipulation.aspx.cs. This untrusted data is embedded straight into the output without proper sanitization or encoding, enabling an attacker to inject malicious code into the output.\nThe attacker would be able to alter the returned web page by simply providing modified data in the user input QueryString_filename, which is read by the Page_Load method at line 33 of WebGoat\\Content\\PathManipulation.aspx.cs. This input then flows through the code straight to the output web page, without sanitization.&nbsp;\nThis can enable a Reflected Cross-Site Scripting (XSS) attack.\n"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/Content/PathManipulation.aspx.cs"},"region":{"startLine":33,"endLine":33}}}]},{"ruleId":"Reflected_XSS_All_Clients","level":"error","message":{"text":"The application's Page_Load embeds untrusted data in the generated output with NavigateUrl, at line 77 of WebGoat\\WebGoatCoins\\Orders.aspx.cs. This untrusted data is embedded straight into the output without proper sanitization or encoding, enabling an attacker to inject malicious code into the output.\nThe attacker would be able to alter the returned web page by simply providing modified data in the user input RawUrl, which is read by the Page_Load method at line 77 of WebGoat\\WebGoatCoins\\Orders.aspx.cs. This input then flows through the code straight to the output web page, without sanitization.&nbsp;\nThis can enable a Reflected Cross-Site Scripting (XSS) attack.\n"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/WebGoatCoins/Orders.aspx.cs"},"region":{"startLine":114,"endLine":114}}},{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/WebGoatCoins/Orders.aspx.cs"},"region":{"startLine":77,"endLine":77}}},{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/WebGoatCoins/Orders.aspx.cs"},"region":{"startLine":62,"endLine":62}}}]},{"ruleId":"Reflected_XSS_All_Clients","level":"error","message":{"text":"The application's LoadComments embeds untrusted data in the generated output with Text, at line 52 of WebGoat\\Content\\StoredXSS.aspx.cs. This untrusted data is embedded straight into the output without proper sanitization or encoding, enabling an attacker to inject malicious code into the output.\nThe attacker would be able to alter the returned web page by simply providing modified data in the user input row, which is read by the LoadComments method at line 48 of WebGoat\\Content\\StoredXSS.aspx.cs. This input then flows through the code straight to the output web page, without sanitization.&nbsp;\nThis can enable a Reflected Cross-Site Scripting (XSS) attack.\n"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/Content/StoredXSS.aspx.cs"},"region":{"startLine":48,"endLine":48}}},{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/Content/StoredXSS.aspx.cs"},"region":{"startLine":49,"endLine":49}}}]},{"ruleId":"Reflected_XSS_All_Clients","level":"error","message":{"text":"The application's ButtonLogOn_Click embeds untrusted data in the generated output with Response, at line 65 of WebGoat\\WebGoatCoins\\CustomerLogin.aspx.cs. This untrusted data is embedded straight into the output without proper sanitization or encoding, enabling an attacker to inject malicious code into the output.\nThe attacker would be able to alter the returned web page by simply providing modified data in the user input Text, which is read by the ButtonLogOn_Click method at line 33 of WebGoat\\WebGoatCoins\\CustomerLogin.aspx.cs. This input then flows through the code straight to the output web page, without sanitization.&nbsp;\nThis can enable a Reflected Cross-Site Scripting (XSS) attack.\n"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/WebGoatCoins/CustomerLogin.aspx.cs"},"region":{"startLine":33,"endLine":33}}}]},{"ruleId":"Reflected_XSS_All_Clients","level":"error","message":{"text":"The application's %&gt; embeds untrusted data in the generated output with Write, at line 9 of WebGoat\\WebGoatCoins\\CustomerLogin.aspx. This untrusted data is embedded straight into the output without proper sanitization or encoding, enabling an attacker to inject malicious code into the output.\nThe attacker would be able to alter the returned web page by simply providing modified data in the user input Request, which is read by the %&gt; method at line 9 of WebGoat\\WebGoatCoins\\CustomerLogin.aspx. This input then flows through the code straight to the output web page, without sanitization.&nbsp;\nThis can enable a Reflected Cross-Site Scripting (XSS) attack.\n"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/WebGoatCoins/CustomerLogin.aspx"},"region":{"startLine":9,"endLine":9}}}]},{"ruleId":"Reflected_XSS_All_Clients","level":"error","message":{"text":"The application's Page_Load embeds untrusted data in the generated output with Text, at line 42 of WebGoat\\WebGoatCoins\\MainPage.aspx.cs. This untrusted data is embedded straight into the output without proper sanitization or encoding, enabling an attacker to inject malicious code into the output.\nThe attacker would be able to alter the returned web page by simply providing modified data in the user input row, which is read by the Page_Load method at line 42 of WebGoat\\WebGoatCoins\\MainPage.aspx.cs. This input then flows through the code straight to the output web page, without sanitization.&nbsp;\nThis can enable a Reflected Cross-Site Scripting (XSS) attack.\n"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/WebGoatCoins/MainPage.aspx.cs"},"region":{"startLine":32,"endLine":32}}},{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/WebGoatCoins/MainPage.aspx.cs"},"region":{"startLine":42,"endLine":42}}}]},{"ruleId":"Reflected_XSS_All_Clients","level":"error","message":{"text":"The application's btnUpload_Click embeds untrusted data in the generated output with Text, at line 26 of WebGoat\\Content\\UploadPathManipulation.aspx.cs. This untrusted data is embedded straight into the output without proper sanitization or encoding, enabling an attacker to inject malicious code into the output.\nThe attacker would be able to alter the returned web page by simply providing modified data in the user input FileName, which is read by the btnUpload_Click method at line 26 of WebGoat\\Content\\UploadPathManipulation.aspx.cs. This input then flows through the code straight to the output web page, without sanitization.&nbsp;\nThis can enable a Reflected Cross-Site Scripting (XSS) attack.\n"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/Content/UploadPathManipulation.aspx.cs"},"region":{"startLine":26,"endLine":26}}}]},{"ruleId":"Reflected_XSS_All_Clients","level":"error","message":{"text":"The application's btnFind_Click embeds untrusted data in the generated output with Text, at line 30 of WebGoat\\Content\\SQLInjectionDiscovery.aspx.cs. This untrusted data is embedded straight into the output without proper sanitization or encoding, enabling an attacker to inject malicious code into the output.\nThe attacker would be able to alter the returned web page by simply providing modified data in the user input Text, which is read by the btnFind_Click method at line 27 of WebGoat\\Content\\SQLInjectionDiscovery.aspx.cs. This input then flows through the code straight to the output web page, without sanitization.&nbsp;\nThis can enable a Reflected Cross-Site Scripting (XSS) attack.\n"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/Content/SQLInjectionDiscovery.aspx.cs"},"region":{"startLine":27,"endLine":27}}}]},{"ruleId":"Reflected_XSS_All_Clients","level":"error","message":{"text":"The application's btnUpload_Click embeds untrusted data in the generated output with Text, at line 23 of WebGoat\\Content\\ReadlineDoS.aspx.cs. This untrusted data is embedded straight into the output without proper sanitization or encoding, enabling an attacker to inject malicious code into the output.\nThe attacker would be able to alter the returned web page by simply providing modified data in the user input PostedFile, which is read by the btnUpload_Click method at line 17 of WebGoat\\Content\\ReadlineDoS.aspx.cs. This input then flows through the code straight to the output web page, without sanitization.&nbsp;\nThis can enable a Reflected Cross-Site Scripting (XSS) attack.\n"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/Content/ReadlineDoS.aspx.cs"},"region":{"startLine":17,"endLine":17}}}]},{"ruleId":"Reflected_XSS_All_Clients","level":"error","message":{"text":"The application's LoadCity embeds untrusted data in the generated output with Text, at line 26 of WebGoat\\Content\\ReflectedXSS.aspx.cs. This untrusted data is embedded straight into the output without proper sanitization or encoding, enabling an attacker to inject malicious code into the output.\nThe attacker would be able to alter the returned web page by simply providing modified data in the user input Request, which is read by the Page_Load method at line 20 of WebGoat\\Content\\ReflectedXSS.aspx.cs. This input then flows through the code straight to the output web page, without sanitization.&nbsp;\nThis can enable a Reflected Cross-Site Scripting (XSS) attack.\n"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/Content/ReflectedXSS.aspx.cs"},"region":{"startLine":20,"endLine":20}}}]},{"ruleId":"Stored_XSS","level":"error","message":{"text":"The application's btnUpload_Click embeds untrusted data in the generated output with Text, at line 23 of WebGoat\\Content\\ReadlineDoS.aspx.cs. This untrusted data is embedded straight into the output without proper sanitization or encoding, enabling an attacker to inject malicious code into the output.\nThe attacker would be able to alter the returned web page by saving malicious data in a data-store ahead of time. The attacker's modified data is then read from the database by the btnUpload_Click method with ReadLine, at line 23 of WebGoat\\Content\\ReadlineDoS.aspx.cs. This untrusted data then flows through the code straight to the output web page, without sanitization.&nbsp;\nThis can enable a Stored Cross-Site Scripting (XSS) attack.\n"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/Content/ReadlineDoS.aspx.cs"},"region":{"startLine":23,"endLine":23}}}]},{"ruleId":"Stored_XSS","level":"error","message":{"text":"The application's Page_Load embeds untrusted data in the generated output with Text, at line 24 of WebGoat\\Content\\PathManipulation.aspx.cs. This untrusted data is embedded straight into the output without proper sanitization or encoding, enabling an attacker to inject malicious code into the output.\nThe attacker would be able to alter the returned web page by saving malicious data in a data-store ahead of time. The attacker's modified data is then read from the database by the Page_Load method with Name, at line 24 of WebGoat\\Content\\PathManipulation.aspx.cs. This untrusted data then flows through the code straight to the output web page, without sanitization.&nbsp;\nThis can enable a Stored Cross-Site Scripting (XSS) attack.\n"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/Content/PathManipulation.aspx.cs"},"region":{"startLine":24,"endLine":24}}},{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/Content/PathManipulation.aspx.cs"},"region":{"startLine":88,"endLine":88}}},{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/Content/PathManipulation.aspx.cs"},"region":{"startLine":25,"endLine":25}}}]},{"ruleId":"Stored_XSS","level":"error","message":{"text":"The application's Page_Load embeds untrusted data in the generated output with Text, at line 92 of WebGoat\\WebGoatCoins\\Orders.aspx.cs. This untrusted data is embedded straight into the output without proper sanitization or encoding, enabling an attacker to inject malicious code into the output.\nThe attacker would be able to alter the returned web page by saving malicious data in a data-store ahead of time. The attacker's modified data is then read from the database by the Page_Load method with FullName, at line 92 of WebGoat\\WebGoatCoins\\Orders.aspx.cs. This untrusted data then flows through the code straight to the output web page, without sanitization.&nbsp;\nThis can enable a Stored Cross-Site Scripting (XSS) attack.\n"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/WebGoatCoins/Orders.aspx.cs"},"region":{"startLine":100,"endLine":100}}},{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/WebGoatCoins/Orders.aspx.cs"},"region":{"startLine":92,"endLine":92}}}]},{"ruleId":"Stored_XSS","level":"error","message":{"text":"The application's btnFind_Click embeds untrusted data in the generated output with Text, at line 30 of WebGoat\\Content\\SQLInjectionDiscovery.aspx.cs. This untrusted data is embedded straight into the output without proper sanitization or encoding, enabling an attacker to inject malicious code into the output.\nThe attacker would be able to alter the returned web page by saving malicious data in a data-store ahead of time. The attacker's modified data is then read from the database by the GetEmailByCustomerNumber method with ExecuteScalar, at line 556 of WebGoat\\App_Code\\DB\\SqliteDbProvider.cs. This untrusted data then flows through the code straight to the output web page, without sanitization.&nbsp;\nThis can enable a Stored Cross-Site Scripting (XSS) attack.\n"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/App_Code/DB/SqliteDbProvider.cs"},"region":{"startLine":258,"endLine":258}}},{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/App_Code/DB/SqliteDbProvider.cs"},"region":{"startLine":355,"endLine":355}}},{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/App_Code/DB/SqliteDbProvider.cs"},"region":{"startLine":421,"endLine":421}}},{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/App_Code/DB/SqliteDbProvider.cs"},"region":{"startLine":455,"endLine":455}}},{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/App_Code/DB/SqliteDbProvider.cs"},"region":{"startLine":328,"endLine":328}}},{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/App_Code/DB/SqliteDbProvider.cs"},"region":{"startLine":218,"endLine":218}}},{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/App_Code/DB/SqliteDbProvider.cs"},"region":{"startLine":506,"endLine":506}}},{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/App_Code/DB/SqliteDbProvider.cs"},"region":{"startLine":556,"endLine":556}}}]},{"ruleId":"Stored_XSS","level":"error","message":{"text":"The application's Page_Load embeds untrusted data in the generated output with ImageUrl, at line 32 of WebGoat\\WebGoatCoins\\MainPage.aspx.cs. This untrusted data is embedded straight into the output without proper sanitization or encoding, enabling an attacker to inject malicious code into the output.\nThe attacker would be able to alter the returned web page by saving malicious data in a data-store ahead of time. The attacker's modified data is then read from the database by the GetCustomerDetails method with ds, at line 229 of WebGoat\\App_Code\\DB\\MySqlDbProvider.cs. This untrusted data then flows through the code straight to the output web page, without sanitization.&nbsp;\nThis can enable a Stored Cross-Site Scripting (XSS) attack.\n"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/App_Code/DB/MySqlDbProvider.cs"},"region":{"startLine":449,"endLine":449}}},{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/App_Code/DB/MySqlDbProvider.cs"},"region":{"startLine":497,"endLine":497}}},{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/App_Code/DB/MySqlDbProvider.cs"},"region":{"startLine":417,"endLine":417}}},{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/App_Code/DB/MySqlDbProvider.cs"},"region":{"startLine":229,"endLine":229}}},{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/App_Code/DB/MySqlDbProvider.cs"},"region":{"startLine":357,"endLine":357}}},{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/App_Code/DB/MySqlDbProvider.cs"},"region":{"startLine":266,"endLine":266}}},{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/App_Code/DB/MySqlDbProvider.cs"},"region":{"startLine":332,"endLine":332}}}]},{"ruleId":"SQL_Injection","level":"error","message":{"text":"The application's GetCustomerEmail method executes an SQL query with ExecuteScalar, at line 192 of WebGoat\\App_Code\\DB\\SqliteDbProvider.cs. The application constructs this SQL query by embedding an untrusted string into the query without proper sanitization. The concatenated string is submitted to the database, where it is parsed and executed accordingly.\nAn attacker would be able to inject arbitrary syntax and data into the SQL query, by crafting a malicious payload and providing it via the input Cookies_customerNumber; this input is then read by the LoadComments method at line 89 of WebGoat\\WebGoatCoins\\ProductDetails.aspx.cs. This input then flows through the code, into a query and to the database server - without sanitization.\nThis may enable an SQL Injection attack.\n"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/WebGoatCoins/ProductDetails.aspx.cs"},"region":{"startLine":89,"endLine":89}}}]},{"ruleId":"SQL_Injection","level":"error","message":{"text":"The application's GetEmailByCustomerNumber method executes an SQL query with ExecuteScalar, at line 556 of WebGoat\\App_Code\\DB\\SqliteDbProvider.cs. The application constructs this SQL query by embedding an untrusted string into the query without proper sanitization. The concatenated string is submitted to the database, where it is parsed and executed accordingly.\nAn attacker would be able to inject arbitrary syntax and data into the SQL query, by crafting a malicious payload and providing it via the input Text; this input is then read by the btnFind_Click method at line 27 of WebGoat\\Content\\SQLInjectionDiscovery.aspx.cs. This input then flows through the code, into a query and to the database server - without sanitization.\nThis may enable an SQL Injection attack.\n"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/Content/SQLInjectionDiscovery.aspx.cs"},"region":{"startLine":27,"endLine":27}}}]},{"ruleId":"Second_Order_SQL_Injection","level":"error","message":{"text":"The application's TestConnection method executes an SQL query with ExecuteReader, at line 46 of WebGoat\\App_Code\\DB\\SqliteDbProvider.cs. The application constructs this SQL query by embedding an untrusted string into the query without proper sanitization. The concatenated string is submitted to the database, where it is parsed and executed accordingly.\nThe attacker may be able to write arbitrary data to the database, which is then retrieved by the application with ReadAllLines in Load method at line 30 of WebGoat\\App_Code\\ConfigFile.cs. This data then flows through the code, until it is used directly in the SQL query without sanitization, and then submitted to the database server for execution.\nThis may enable a Second-Order SQL Injection attack.\n"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/App_Code/ConfigFile.cs"},"region":{"startLine":30,"endLine":30}}}]},{"ruleId":"XPath_Injection","level":"error","message":{"text":"The application's FindSalesPerson method constructs an XPath query, for navigating an XML document. The XPath query is created with BinaryExpr, at line 28 of WebGoat\\Content\\XPathInjection.aspx.cs, using an untrusted string embedded in the expression. &nbsp;\nThis may enable an attacker to modify the XPath expression, leading to an XPath Injection attack.\nThe attacker may be able to inject the modified XPath expression via user input, QueryString_state, which is retrieved by the application in the Page_Load method, at line 20 of WebGoat\\Content\\XPathInjection.aspx.cs. This value then flows through the code to&nbsp;BinaryExpr, as noted.\n"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"WebGoat/Content/XPathInjection.aspx.cs"},"region":{"startLine":20,"endLine":20}}}]}]}]}